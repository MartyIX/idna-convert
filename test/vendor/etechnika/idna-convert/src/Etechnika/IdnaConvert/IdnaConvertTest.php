<?php

namespace Etechnika\IdnaConvert;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-10-03 at 11:33:53.
 */
class IdnaConvertTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var IdnaConvert
     */
    protected $object;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new IdnaConvert;
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }


    /**
     * @covers Etechnika\IdnaConvert\IdnaConvert::encode
     * @dataProvider providerEncodeString
     */
    public function testEncodeString( $strIn, $strOut, $booTrue )
    {
        if ( $booTrue ) {
            $strOut === IdnaConvert::encodeString( $strIn ) ? $this->assertTrue( true ) : $this->assertFalse( false );
        }
        else {
            $strOut !== IdnaConvert::encodeString( $strIn ) ? $this->assertTrue( true ) : $this->assertFalse( false );
        }
    }


    public function providerEncodeString()
    {
        return array(
            array( 'рф', 'xn--p1ai', true ), // Russia
            array( 'الاردن.', 'xn--mgbayh7gpa', false ), // Jordan
            array( '.الاردن.', 'xn--mgbayh7gpa', true ), // Jordan
            array( 'a.الاردن.', 'a.xn--mgbayh7gpa', true ), // Jordan
            array( 'الارد', 'xn--mgbayh7gpa', true ),
            array( 'عمان.', 'xn--mgb9awbf.', true ),
            array( '.சிங்கப்பூர்"', 'xn--clchc0ea0b2g2a9gcd', true ),
        );
    }
}
